{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\softlogic\\\\OneDrive\\\\Desktop\\\\online-mcq-system\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../../api/apiService';\nimport ExamInterface from '../Exam/ExamInterface';\nimport ResultView from '../Exam/ResultView';\nimport '../../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  user,\n  onLogout\n}) => {\n  _s();\n  const [exams, setExams] = useState([]);\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedExam, setSelectedExam] = useState(null);\n  const [examResult, setExamResult] = useState(null);\n  const [activeTab, setActiveTab] = useState('exams');\n  const [detailedExamAnswers, setDetailedExamAnswers] = useState([]); // New state for detailed answers\n\n  useEffect(() => {\n    loadData();\n  }, [user]);\n  const loadData = async () => {\n    try {\n      const [examsData, resultsData] = await Promise.all([api.getExams(), api.getUserResults(user.id)]);\n      setExams(examsData);\n      setResults(resultsData);\n    } catch (error) {\n      console.error('Error loading data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleStartExam = exam => {\n    setSelectedExam(exam);\n    setExamResult(null);\n    setDetailedExamAnswers([]); // Clear previous detailed answers\n  };\n  const handleExamComplete = async result => {\n    // result here is the raw result from the backend, including examId (string) and answers (array of {questionId, selectedOption})\n\n    try {\n      // 1. Fetch the full exam details\n      const fullExamDetails = await api.getExamById(result.examId);\n\n      // 2. Fetch all questions for this exam to get their full details (questionText, options)\n      const examQuestions = await api.getQuestions(result.examId);\n\n      // 3. Map the submitted answers with the full question details\n      const enrichedAnswers = result.answers.map(submittedAnswer => {\n        var _correspondingQuestio;\n        const correspondingQuestion = examQuestions.find(q => q._id === submittedAnswer.questionId);\n        // Find the correct option for the question\n        const correctOption = correspondingQuestion === null || correspondingQuestion === void 0 ? void 0 : (_correspondingQuestio = correspondingQuestion.options.find(opt => opt.isCorrect)) === null || _correspondingQuestio === void 0 ? void 0 : _correspondingQuestio.optionKey;\n        return {\n          ...submittedAnswer,\n          question: correspondingQuestion,\n          // Attach the full question object\n          correctOption: correctOption // Add the correct option\n        };\n      });\n\n      // Combine the raw result with enriched exam and answer data\n      const enrichedResult = {\n        ...result,\n        exam: fullExamDetails,\n        // Add the full exam object\n        answers: enrichedAnswers // Add the enriched answers\n      };\n      setExamResult(enrichedResult);\n      setDetailedExamAnswers(enrichedAnswers); // Also store detailed answers separately if needed, though 'examResult.answers' should now contain them\n      setSelectedExam(null);\n      loadData(); // Reload results on dashboard to reflect new submission\n    } catch (error) {\n      console.error('Error enriching exam result:', error);\n      // Fallback: Set raw result if enrichment fails\n      setExamResult(result);\n      setSelectedExam(null);\n      loadData();\n    }\n  };\n  const handleBackToDashboard = () => {\n    setSelectedExam(null);\n    setExamResult(null);\n    setDetailedExamAnswers([]); // Clear when going back\n  };\n  const handleHome = () => {\n    setSelectedExam(null);\n    setExamResult(null);\n    setDetailedExamAnswers([]);\n    setActiveTab('exams');\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 12\n    }, this);\n  }\n  if (selectedExam) {\n    return /*#__PURE__*/_jsxDEV(ExamInterface, {\n      exam: selectedExam,\n      user: user,\n      onComplete: handleExamComplete,\n      onBack: handleBackToDashboard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 12\n    }, this);\n  }\n  if (examResult) {\n    // Pass the enriched examResult directly, which now contains full exam and question details\n    return /*#__PURE__*/_jsxDEV(ResultView, {\n      result: examResult,\n      answers: examResult.answers,\n      onBack: handleBackToDashboard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"MCQ Exam System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Welcome, \", user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleHome,\n          className: \"btn-secondary\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onLogout,\n          className: \"btn-secondary\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"dashboard-nav\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `nav-button ${activeTab === 'exams' ? 'active' : ''}`,\n        onClick: () => setActiveTab('exams'),\n        children: \"Available Exams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `nav-button ${activeTab === 'results' ? 'active' : ''}`,\n        onClick: () => setActiveTab('results'),\n        children: \"My Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"dashboard-content\",\n      children: [activeTab === 'exams' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exams-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Available Exams\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), exams.map(exam => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"exam-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: exam.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: exam.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"exam-meta\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Duration: \", exam.duration, \" minutes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Questions: 5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 19\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleStartExam(exam),\n            className: \"btn-primary\",\n            children: \"Start Exam\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this)]\n        }, exam._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), activeTab === 'results' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"My Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), results.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-results\",\n          children: \"No exam results found. Take an exam to see your results here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-grid\",\n          children: results.map(result => {\n            var _result$examId;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: ((_result$examId = result.examId) === null || _result$examId === void 0 ? void 0 : _result$examId.title) || 'Exam Title Not Available'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-score\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"score\",\n                  children: [result.score, \"/\", result.totalQuestions]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"percentage\",\n                  children: [result.percentage, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"result-date\",\n                children: [\"Completed: \", new Date(result.completedAt).toLocaleDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `result-status ${result.percentage >= 70 ? 'passed' : 'failed'}`,\n                children: result.percentage >= 70 ? 'Passed' : 'Failed'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 21\n              }, this)]\n            }, result._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"UrJtzAthNSYw6UH8c6ycyJZ8Xps=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","api","ExamInterface","ResultView","jsxDEV","_jsxDEV","Dashboard","user","onLogout","_s","exams","setExams","results","setResults","loading","setLoading","selectedExam","setSelectedExam","examResult","setExamResult","activeTab","setActiveTab","detailedExamAnswers","setDetailedExamAnswers","loadData","examsData","resultsData","Promise","all","getExams","getUserResults","id","error","console","handleStartExam","exam","handleExamComplete","result","fullExamDetails","getExamById","examId","examQuestions","getQuestions","enrichedAnswers","answers","map","submittedAnswer","_correspondingQuestio","correspondingQuestion","find","q","_id","questionId","correctOption","options","opt","isCorrect","optionKey","question","enrichedResult","handleBackToDashboard","handleHome","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onComplete","onBack","name","onClick","title","description","duration","length","_result$examId","score","totalQuestions","percentage","Date","completedAt","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/softlogic/OneDrive/Desktop/online-mcq-system/frontend/src/components/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport api from '../../api/apiService';\r\nimport ExamInterface from '../Exam/ExamInterface';\r\nimport ResultView from '../Exam/ResultView';\r\nimport '../../App.css';\r\n\r\nconst Dashboard = ({ user, onLogout }) => {\r\n  const [exams, setExams] = useState([]);\r\n  const [results, setResults] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedExam, setSelectedExam] = useState(null);\r\n  const [examResult, setExamResult] = useState(null);\r\n  const [activeTab, setActiveTab] = useState('exams');\r\n  const [detailedExamAnswers, setDetailedExamAnswers] = useState([]); // New state for detailed answers\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [user]);\r\n\r\n  const loadData = async () => {\r\n    try {\r\n      const [examsData, resultsData] = await Promise.all([\r\n        api.getExams(),\r\n        api.getUserResults(user.id)\r\n      ]);\r\n      setExams(examsData);\r\n      setResults(resultsData);\r\n    } catch (error) {\r\n      console.error('Error loading data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleStartExam = (exam) => {\r\n    setSelectedExam(exam);\r\n    setExamResult(null);\r\n    setDetailedExamAnswers([]); // Clear previous detailed answers\r\n  };\r\n\r\n  const handleExamComplete = async (result) => {\r\n    // result here is the raw result from the backend, including examId (string) and answers (array of {questionId, selectedOption})\r\n\r\n    try {\r\n      // 1. Fetch the full exam details\r\n      const fullExamDetails = await api.getExamById(result.examId);\r\n\r\n      // 2. Fetch all questions for this exam to get their full details (questionText, options)\r\n      const examQuestions = await api.getQuestions(result.examId);\r\n\r\n      // 3. Map the submitted answers with the full question details\r\n      const enrichedAnswers = result.answers.map(submittedAnswer => {\r\n        const correspondingQuestion = examQuestions.find(q => q._id === submittedAnswer.questionId);\r\n        // Find the correct option for the question\r\n        const correctOption = correspondingQuestion?.options.find(opt => opt.isCorrect)?.optionKey;\r\n\r\n        return {\r\n          ...submittedAnswer,\r\n          question: correspondingQuestion, // Attach the full question object\r\n          correctOption: correctOption // Add the correct option\r\n        };\r\n      });\r\n\r\n      // Combine the raw result with enriched exam and answer data\r\n      const enrichedResult = {\r\n        ...result,\r\n        exam: fullExamDetails, // Add the full exam object\r\n        answers: enrichedAnswers // Add the enriched answers\r\n      };\r\n\r\n      setExamResult(enrichedResult);\r\n      setDetailedExamAnswers(enrichedAnswers); // Also store detailed answers separately if needed, though 'examResult.answers' should now contain them\r\n      setSelectedExam(null);\r\n      loadData(); // Reload results on dashboard to reflect new submission\r\n    } catch (error) {\r\n      console.error('Error enriching exam result:', error);\r\n      // Fallback: Set raw result if enrichment fails\r\n      setExamResult(result);\r\n      setSelectedExam(null);\r\n      loadData();\r\n    }\r\n  };\r\n\r\n  const handleBackToDashboard = () => {\r\n    setSelectedExam(null);\r\n    setExamResult(null);\r\n    setDetailedExamAnswers([]); // Clear when going back\r\n  };\r\n\r\n  const handleHome = () => {\r\n    setSelectedExam(null);\r\n    setExamResult(null);\r\n    setDetailedExamAnswers([]);\r\n    setActiveTab('exams');\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading...</div>;\r\n  }\r\n\r\n  if (selectedExam) {\r\n    return <ExamInterface exam={selectedExam} user={user} onComplete={handleExamComplete} onBack={handleBackToDashboard} />;\r\n  }\r\n\r\n  if (examResult) {\r\n    // Pass the enriched examResult directly, which now contains full exam and question details\r\n    return <ResultView result={examResult} answers={examResult.answers} onBack={handleBackToDashboard} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <header className=\"dashboard-header\">\r\n        <h1>MCQ Exam System</h1>\r\n        <div className=\"user-info\">\r\n          <span>Welcome, {user.name}</span>\r\n          <button onClick={handleHome} className=\"btn-secondary\">Home</button>\r\n          <button onClick={onLogout} className=\"btn-secondary\">Logout</button>\r\n        </div>\r\n      </header>\r\n\r\n      <nav className=\"dashboard-nav\">\r\n        <button className={`nav-button ${activeTab === 'exams' ? 'active' : ''}`} onClick={() => setActiveTab('exams')}>Available Exams</button>\r\n        <button className={`nav-button ${activeTab === 'results' ? 'active' : ''}`} onClick={() => setActiveTab('results')}>My Results</button>\r\n      </nav>\r\n\r\n      <main className=\"dashboard-content\">\r\n        {activeTab === 'exams' && (\r\n          <div className=\"exams-grid\">\r\n            <h2>Available Exams</h2>\r\n            {exams.map(exam => (\r\n              <div key={exam._id} className=\"exam-card\">\r\n                <h3>{exam.title}</h3>\r\n                <p>{exam.description}</p>\r\n                <div className=\"exam-meta\">\r\n                  <span>Duration: {exam.duration} minutes</span>\r\n                  <span>Questions: 5</span> {/* This '5' is hardcoded, consider fetching actual question count */}\r\n                </div>\r\n                <button onClick={() => handleStartExam(exam)} className=\"btn-primary\">Start Exam</button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'results' && (\r\n          <div className=\"results-section\">\r\n            <h2>My Results</h2>\r\n            {results.length === 0 ? (\r\n              <p className=\"no-results\">No exam results found. Take an exam to see your results here.</p>\r\n            ) : (\r\n              <div className=\"results-grid\">\r\n                {results.map(result => (\r\n                  <div key={result._id} className=\"result-card\">\r\n                    {/* Ensure result.examId is populated with title when results are loaded */}\r\n                    <h3>{result.examId?.title || 'Exam Title Not Available'}</h3>\r\n                    <div className=\"result-score\">\r\n                      <span className=\"score\">{result.score}/{result.totalQuestions}</span>\r\n                      <span className=\"percentage\">{result.percentage}%</span>\r\n                    </div>\r\n                    <p className=\"result-date\">Completed: {new Date(result.completedAt).toLocaleDateString()}</p>\r\n                    <div className={`result-status ${result.percentage >= 70 ? 'passed' : 'failed'}`}>{result.percentage >= 70 ? 'Passed' : 'Failed'}</div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}