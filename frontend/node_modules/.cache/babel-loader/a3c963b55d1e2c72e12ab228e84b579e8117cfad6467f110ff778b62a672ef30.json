{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\softlogic\\\\OneDrive\\\\Desktop\\\\online-mcq-system\\\\frontend\\\\src\\\\components\\\\Exam\\\\ExamInterface.js\",\n  _s = $RefreshSig$();\n// File: src/components/Exam/ExamInterface.js\nimport React, { useEffect, useState } from 'react';\nimport api from '../../api/apiService';\nimport ResultView from '../Exam/ResultView'; // Import ResultView component\nimport '../../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExamInterface = ({\n  exam,\n  user,\n  onBack\n}) => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(exam.duration * 60);\n  const [showAllQuestions, setShowAllQuestions] = useState(false);\n  const [resultData, setResultData] = useState(null); // Store result after submission\n  const [resultAnswers, setResultAnswers] = useState([]); // Store detailed answers for review\n\n  useEffect(() => {\n    loadQuestions();\n  }, [exam._id]);\n  useEffect(() => {\n    if (timeLeft > 0 && !submitting) {\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n      return () => clearTimeout(timer);\n    } else if (timeLeft <= 0 && !submitting) {\n      handleSubmit();\n    }\n  }, [timeLeft, submitting]);\n  const loadQuestions = async () => {\n    try {\n      const questionsData = await api.getQuestions(exam._id);\n      setQuestions(questionsData);\n    } catch (error) {\n      console.error('Error loading questions:', error);\n      alert('Failed to load exam questions.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAnswerSelect = (questionId, option) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questionId]: option\n    }));\n  };\n  const handleSubmit = async () => {\n    if (submitting) return;\n    setSubmitting(true);\n    try {\n      const formattedAnswers = Object.entries(answers).map(([questionId, selectedOption]) => ({\n        questionId,\n        selectedOption\n      }));\n\n      // Submit exam and get result summary\n      const submitResponse = await api.submitExam(user.id, exam._id, formattedAnswers);\n      if (submitResponse.result && submitResponse.result.id) {\n        // Fetch detailed result (including populated question & answers)\n        const detailsResponse = await api.getResultDetails(submitResponse.result.id);\n        setResultData(detailsResponse.result);\n        setResultAnswers(detailsResponse.answers);\n      } else {\n        alert('Unexpected response from server on submit.');\n      }\n    } catch (error) {\n      console.error('Error submitting exam:', error);\n      alert('Error submitting exam. Please try again.');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n  const getAnsweredCount = () => Object.keys(answers).length;\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading exam questions...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 23\n  }, this);\n\n  // If we have result data, render the ResultView component\n  if (resultData) {\n    return /*#__PURE__*/_jsxDEV(ResultView, {\n      result: resultData,\n      answers: resultAnswers,\n      onBack: onBack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 12\n    }, this);\n  }\n  const currentQuestion = questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exam-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"exam-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exam-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: exam.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: exam.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exam-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: timeLeft < 300 ? 'timer-warning' : '',\n            children: [\"Time Left: \", formatTime(timeLeft)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress\",\n          children: [getAnsweredCount(), \"/\", questions.length, \" answered\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onBack,\n          className: \"btn-secondary\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exam-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-toggle\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: !showAllQuestions ? 'active' : '',\n          onClick: () => setShowAllQuestions(false),\n          children: \"One by One\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: showAllQuestions ? 'active' : '',\n          onClick: () => setShowAllQuestions(true),\n          children: \"All Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), !showAllQuestions ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"single-question-view\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-navigation\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Question \", currentQuestionIndex + 1, \" of \", questions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nav-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setCurrentQuestionIndex(Math.max(0, currentQuestionIndex - 1)),\n              disabled: currentQuestionIndex === 0,\n              className: \"btn-secondary\",\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setCurrentQuestionIndex(Math.min(questions.length - 1, currentQuestionIndex + 1)),\n              disabled: currentQuestionIndex === questions.length - 1,\n              className: \"btn-secondary\",\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: currentQuestion.questionText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"options\",\n            children: currentQuestion.options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"option-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: `question-${currentQuestion._id}`,\n                value: option.optionKey,\n                checked: answers[currentQuestion._id] === option.optionKey,\n                onChange: () => handleAnswerSelect(currentQuestion._id, option.optionKey)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"option-text\",\n                children: [option.optionKey, \". \", option.optionText]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 21\n              }, this)]\n            }, option.optionKey, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-grid\",\n          children: questions.map((_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `question-number ${index === currentQuestionIndex ? 'current' : ''} ${answers[questions[index]._id] ? 'answered' : ''}`,\n            onClick: () => setCurrentQuestionIndex(index),\n            children: index + 1\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"all-questions-view\",\n        children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Question \", index + 1, \": \", question.questionText]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"options\",\n            children: question.options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"option-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: `question-${question._id}`,\n                value: option.optionKey,\n                checked: answers[question._id] === option.optionKey,\n                onChange: () => handleAnswerSelect(question._id, option.optionKey)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"option-text\",\n                children: [option.optionKey, \". \", option.optionText]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 23\n              }, this)]\n            }, option.optionKey, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this)]\n        }, question._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submit-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Make sure you have answered all questions before submitting.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Answered: \", getAnsweredCount(), \" out of \", questions.length, \" questions\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          disabled: submitting || getAnsweredCount() === 0,\n          className: \"btn-primary submit-btn\",\n          children: submitting ? 'Submitting...' : 'Submit Exam'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(ExamInterface, \"wpW7/VcxItGPrlri//Ushu4SVuk=\");\n_c = ExamInterface;\nexport default ExamInterface;\nvar _c;\n$RefreshReg$(_c, \"ExamInterface\");","map":{"version":3,"names":["React","useEffect","useState","api","ResultView","jsxDEV","_jsxDEV","ExamInterface","exam","user","onBack","_s","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","loading","setLoading","submitting","setSubmitting","timeLeft","setTimeLeft","duration","showAllQuestions","setShowAllQuestions","resultData","setResultData","resultAnswers","setResultAnswers","loadQuestions","_id","timer","setTimeout","clearTimeout","handleSubmit","questionsData","getQuestions","error","console","alert","handleAnswerSelect","questionId","option","prev","formattedAnswers","Object","entries","map","selectedOption","submitResponse","submitExam","id","result","detailsResponse","getResultDetails","formatTime","seconds","minutes","Math","floor","remainingSeconds","toString","padStart","getAnsweredCount","keys","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","currentQuestion","title","description","onClick","max","disabled","min","questionText","options","type","name","value","optionKey","checked","onChange","optionText","_","index","question","_c","$RefreshReg$"],"sources":["C:/Users/softlogic/OneDrive/Desktop/online-mcq-system/frontend/src/components/Exam/ExamInterface.js"],"sourcesContent":["// File: src/components/Exam/ExamInterface.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport api from '../../api/apiService';\r\nimport ResultView from '../Exam/ResultView'; // Import ResultView component\r\nimport '../../App.css';\r\n\r\nconst ExamInterface = ({ exam, user, onBack }) => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [answers, setAnswers] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [timeLeft, setTimeLeft] = useState(exam.duration * 60);\r\n  const [showAllQuestions, setShowAllQuestions] = useState(false);\r\n\r\n  const [resultData, setResultData] = useState(null); // Store result after submission\r\n  const [resultAnswers, setResultAnswers] = useState([]); // Store detailed answers for review\r\n\r\n  useEffect(() => {\r\n    loadQuestions();\r\n  }, [exam._id]);\r\n\r\n  useEffect(() => {\r\n    if (timeLeft > 0 && !submitting) {\r\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\r\n      return () => clearTimeout(timer);\r\n    } else if (timeLeft <= 0 && !submitting) {\r\n      handleSubmit();\r\n    }\r\n  }, [timeLeft, submitting]);\r\n\r\n  const loadQuestions = async () => {\r\n    try {\r\n      const questionsData = await api.getQuestions(exam._id);\r\n      setQuestions(questionsData);\r\n    } catch (error) {\r\n      console.error('Error loading questions:', error);\r\n      alert('Failed to load exam questions.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAnswerSelect = (questionId, option) => {\r\n    setAnswers(prev => ({ ...prev, [questionId]: option }));\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (submitting) return;\r\n    setSubmitting(true);\r\n    try {\r\n      const formattedAnswers = Object.entries(answers).map(([questionId, selectedOption]) => ({\r\n        questionId,\r\n        selectedOption\r\n      }));\r\n\r\n      // Submit exam and get result summary\r\n      const submitResponse = await api.submitExam(user.id, exam._id, formattedAnswers);\r\n\r\n      if (submitResponse.result && submitResponse.result.id) {\r\n        // Fetch detailed result (including populated question & answers)\r\n        const detailsResponse = await api.getResultDetails(submitResponse.result.id);\r\n\r\n        setResultData(detailsResponse.result);\r\n        setResultAnswers(detailsResponse.answers);\r\n      } else {\r\n        alert('Unexpected response from server on submit.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error submitting exam:', error);\r\n      alert('Error submitting exam. Please try again.');\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = seconds % 60;\r\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const getAnsweredCount = () => Object.keys(answers).length;\r\n\r\n  if (loading) return <div className=\"loading\">Loading exam questions...</div>;\r\n\r\n  // If we have result data, render the ResultView component\r\n  if (resultData) {\r\n    return <ResultView result={resultData} answers={resultAnswers} onBack={onBack} />;\r\n  }\r\n\r\n  const currentQuestion = questions[currentQuestionIndex];\r\n\r\n  return (\r\n    <div className=\"exam-interface\">\r\n      <header className=\"exam-header\">\r\n        <div className=\"exam-info\">\r\n          <h2>{exam.title}</h2>\r\n          <p>{exam.description}</p>\r\n        </div>\r\n        <div className=\"exam-controls\">\r\n          <div className=\"timer\">\r\n            <span className={timeLeft < 300 ? 'timer-warning' : ''}>\r\n              Time Left: {formatTime(timeLeft)}\r\n            </span>\r\n          </div>\r\n          <div className=\"progress\">\r\n            {getAnsweredCount()}/{questions.length} answered\r\n          </div>\r\n          <button onClick={onBack} className=\"btn-secondary\">\r\n            Back\r\n          </button>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"exam-content\">\r\n        <div className=\"view-toggle\">\r\n          <button\r\n            className={!showAllQuestions ? 'active' : ''}\r\n            onClick={() => setShowAllQuestions(false)}\r\n          >\r\n            One by One\r\n          </button>\r\n          <button\r\n            className={showAllQuestions ? 'active' : ''}\r\n            onClick={() => setShowAllQuestions(true)}\r\n          >\r\n            All Questions\r\n          </button>\r\n        </div>\r\n\r\n        {!showAllQuestions ? (\r\n          <div className=\"single-question-view\">\r\n            <div className=\"question-navigation\">\r\n              <span>\r\n                Question {currentQuestionIndex + 1} of {questions.length}\r\n              </span>\r\n              <div className=\"nav-buttons\">\r\n                <button\r\n                  onClick={() => setCurrentQuestionIndex(Math.max(0, currentQuestionIndex - 1))}\r\n                  disabled={currentQuestionIndex === 0}\r\n                  className=\"btn-secondary\"\r\n                >\r\n                  Previous\r\n                </button>\r\n                <button\r\n                  onClick={() =>\r\n                    setCurrentQuestionIndex(Math.min(questions.length - 1, currentQuestionIndex + 1))\r\n                  }\r\n                  disabled={currentQuestionIndex === questions.length - 1}\r\n                  className=\"btn-secondary\"\r\n                >\r\n                  Next\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"question-card\">\r\n              <h3>{currentQuestion.questionText}</h3>\r\n              <div className=\"options\">\r\n                {currentQuestion.options.map(option => (\r\n                  <label key={option.optionKey} className=\"option-label\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name={`question-${currentQuestion._id}`}\r\n                      value={option.optionKey}\r\n                      checked={answers[currentQuestion._id] === option.optionKey}\r\n                      onChange={() => handleAnswerSelect(currentQuestion._id, option.optionKey)}\r\n                    />\r\n                    <span className=\"option-text\">\r\n                      {option.optionKey}. {option.optionText}\r\n                    </span>\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"question-grid\">\r\n              {questions.map((_, index) => (\r\n                <button\r\n                  key={index}\r\n                  className={`question-number ${\r\n                    index === currentQuestionIndex ? 'current' : ''\r\n                  } ${answers[questions[index]._id] ? 'answered' : ''}`}\r\n                  onClick={() => setCurrentQuestionIndex(index)}\r\n                >\r\n                  {index + 1}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"all-questions-view\">\r\n            {questions.map((question, index) => (\r\n              <div key={question._id} className=\"question-card\">\r\n                <h3>\r\n                  Question {index + 1}: {question.questionText}\r\n                </h3>\r\n                <div className=\"options\">\r\n                  {question.options.map(option => (\r\n                    <label key={option.optionKey} className=\"option-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        name={`question-${question._id}`}\r\n                        value={option.optionKey}\r\n                        checked={answers[question._id] === option.optionKey}\r\n                        onChange={() => handleAnswerSelect(question._id, option.optionKey)}\r\n                      />\r\n                      <span className=\"option-text\">\r\n                        {option.optionKey}. {option.optionText}\r\n                      </span>\r\n                    </label>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"submit-section\">\r\n          <div className=\"submit-info\">\r\n            <p>Make sure you have answered all questions before submitting.</p>\r\n            <p>\r\n              Answered: {getAnsweredCount()} out of {questions.length} questions\r\n            </p>\r\n          </div>\r\n          <button\r\n            onClick={handleSubmit}\r\n            disabled={submitting || getAnsweredCount() === 0}\r\n            className=\"btn-primary submit-btn\"\r\n          >\r\n            {submitting ? 'Submitting...' : 'Submit Exam'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExamInterface;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}