{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\softlogic\\\\OneDrive\\\\Desktop\\\\online-mcq-system\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useNavigate } from 'react-router-dom'; // Import Router components and useNavigate\nimport Login from './components/Auth/Login';\nimport Register from './components/Auth/Register';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport HomePage from './components/HomePage/HomePage'; // Import the new HomePage component\n\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate(); // Initialize navigate for App component's logic\n\n  // Effect to check for user in localStorage on initial load\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      try {\n        const parsedUser = JSON.parse(storedUser);\n        setUser(parsedUser);\n        // If user is logged in, navigate to dashboard on app load\n        // Only navigate if not already on dashboard, to prevent loop\n        if (window.location.pathname !== '/dashboard') {\n          navigate('/dashboard');\n        }\n      } catch (e) {\n        console.error(\"Failed to parse user from localStorage:\", e);\n        localStorage.removeItem('user'); // Clear corrupted data\n        navigate('/'); // Go to home if data is bad\n      }\n    }\n  }, [navigate]);\n  const handleLogin = userData => {\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData)); // Persist user\n    navigate('/dashboard'); // Navigate to dashboard after login\n  };\n  const handleRegister = userData => {\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData)); // Persist user\n    navigate('/dashboard'); // Navigate to dashboard after registration\n  };\n  const handleLogout = () => {\n    setUser(null);\n    localStorage.removeItem('user'); // Clear user from localStorage\n    navigate('/'); // Navigate to homepage after logout\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: user ?\n        /*#__PURE__*/\n        // If user is logged in, and tries to go to '/', redirect to dashboard\n        _jsxDEV(Dashboard, {\n          user: user,\n          onLogout: handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this) :\n        /*#__PURE__*/\n        // If not logged in, show HomePage with a button to go to login\n        _jsxDEV(HomePage, {\n          onGetStarted: () => navigate('/login')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: user ?\n        /*#__PURE__*/\n        // If user is already logged in, redirect to dashboard\n        _jsxDEV(Dashboard, {\n          user: user,\n          onLogout: handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: handleLogin,\n          onSwitchToRegister: () => navigate('/register') // Use navigate\n          ,\n          onBackToHome: () => navigate('/') // Use navigate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: user ?\n        /*#__PURE__*/\n        // If user is already logged in, redirect to dashboard\n        _jsxDEV(Dashboard, {\n          user: user,\n          onLogout: handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Register, {\n          onRegister: handleRegister,\n          onSwitchToLogin: () => navigate('/login') // Use navigate\n          ,\n          onBackToHome: () => navigate('/') // Use navigate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        element: user ? /*#__PURE__*/_jsxDEV(Dashboard, {\n          user: user,\n          onLogout: handleLogout\n          // No onBackToHome prop needed here, Dashboard will use its own useNavigate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this) :\n        /*#__PURE__*/\n        // If not logged in, redirect to login page\n        _jsxDEV(Login, {\n          onLogin: handleLogin,\n          onSwitchToRegister: () => navigate('/register'),\n          onBackToHome: () => navigate('/')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"error-message text-center\",\n          children: \"404 - Page Not Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n// IMPORTANT: Wrap App with BrowserRouter to provide routing context\n// In a typical React app, this is done in src/index.js.\n// For this immersive environment, we do it here.\n_s(App, \"/48TlfV0adSMEvsbW2gk5sMeopI=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default function AppWrapper() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n_c2 = AppWrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppWrapper\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","useNavigate","Login","Register","Dashboard","HomePage","jsxDEV","_jsxDEV","App","_s","user","setUser","navigate","storedUser","localStorage","getItem","parsedUser","JSON","parse","window","location","pathname","e","console","error","removeItem","handleLogin","userData","setItem","stringify","handleRegister","handleLogout","className","children","path","element","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","onGetStarted","onLogin","onSwitchToRegister","onBackToHome","onRegister","onSwitchToLogin","_c","AppWrapper","_c2","$RefreshReg$"],"sources":["C:/Users/softlogic/OneDrive/Desktop/online-mcq-system/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useNavigate } from 'react-router-dom'; // Import Router components and useNavigate\nimport Login from './components/Auth/Login';\nimport Register from './components/Auth/Register';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport HomePage from './components/HomePage/HomePage'; // Import the new HomePage component\n\nimport './App.css';\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate(); // Initialize navigate for App component's logic\n\n  // Effect to check for user in localStorage on initial load\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      try {\n        const parsedUser = JSON.parse(storedUser);\n        setUser(parsedUser);\n        // If user is logged in, navigate to dashboard on app load\n        // Only navigate if not already on dashboard, to prevent loop\n        if (window.location.pathname !== '/dashboard') {\n          navigate('/dashboard');\n        }\n      } catch (e) {\n        console.error(\"Failed to parse user from localStorage:\", e);\n        localStorage.removeItem('user'); // Clear corrupted data\n        navigate('/'); // Go to home if data is bad\n      }\n    }\n  }, [navigate]);\n\n  const handleLogin = (userData) => {\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData)); // Persist user\n    navigate('/dashboard'); // Navigate to dashboard after login\n  };\n\n  const handleRegister = (userData) => {\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData)); // Persist user\n    navigate('/dashboard'); // Navigate to dashboard after registration\n  };\n\n  const handleLogout = () => {\n    setUser(null);\n    localStorage.removeItem('user'); // Clear user from localStorage\n    navigate('/'); // Navigate to homepage after logout\n  };\n\n  return (\n    <div className=\"App\">\n      <Routes>\n        {/* Homepage Route */}\n        <Route\n          path=\"/\"\n          element={\n            user ? (\n              // If user is logged in, and tries to go to '/', redirect to dashboard\n              <Dashboard user={user} onLogout={handleLogout} />\n            ) : (\n              // If not logged in, show HomePage with a button to go to login\n              <HomePage onGetStarted={() => navigate('/login')} />\n            )\n          }\n        />\n\n        {/* Login Route */}\n        <Route\n          path=\"/login\"\n          element={\n            user ? (\n              // If user is already logged in, redirect to dashboard\n              <Dashboard user={user} onLogout={handleLogout} />\n            ) : (\n              <Login\n                onLogin={handleLogin}\n                onSwitchToRegister={() => navigate('/register')} // Use navigate\n                onBackToHome={() => navigate('/')} // Use navigate\n              />\n            )\n          }\n        />\n\n        {/* Register Route */}\n        <Route\n          path=\"/register\"\n          element={\n            user ? (\n              // If user is already logged in, redirect to dashboard\n              <Dashboard user={user} onLogout={handleLogout} />\n            ) : (\n              <Register\n                onRegister={handleRegister}\n                onSwitchToLogin={() => navigate('/login')} // Use navigate\n                onBackToHome={() => navigate('/')} // Use navigate\n              />\n            )\n          }\n        />\n\n        {/* Dashboard Route (Protected) */}\n        <Route\n          path=\"/dashboard\"\n          element={\n            user ? (\n              <Dashboard\n                user={user}\n                onLogout={handleLogout}\n                // No onBackToHome prop needed here, Dashboard will use its own useNavigate\n              />\n            ) : (\n              // If not logged in, redirect to login page\n              <Login onLogin={handleLogin} onSwitchToRegister={() => navigate('/register')} onBackToHome={() => navigate('/')} />\n            )\n          }\n        />\n\n        {/* Fallback for any unhandled routes */}\n        <Route path=\"*\" element={<h2 className=\"error-message text-center\">404 - Page Not Found</h2>} />\n      </Routes>\n    </div>\n  );\n}\n\n// IMPORTANT: Wrap App with BrowserRouter to provide routing context\n// In a typical React app, this is done in src/index.js.\n// For this immersive environment, we do it here.\nexport default function AppWrapper() {\n  return (\n    <Router>\n      <App />\n    </Router>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}