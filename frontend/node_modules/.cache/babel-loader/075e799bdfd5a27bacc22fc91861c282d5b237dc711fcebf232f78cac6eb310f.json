{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\softlogic\\\\OneDrive\\\\Desktop\\\\online-mcq-system\\\\frontend\\\\src\\\\components\\\\Exam\\\\ExamInterface.js\",\n  _s = $RefreshSig$();\n// File: src/components/Exam/ExamInterface.js\nimport React, { useEffect, useState } from 'react';\nimport api from '../../api/apiService';\nimport '../../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExamInterface = ({\n  exam,\n  user,\n  onComplete,\n  onBack\n}) => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(exam.duration * 60);\n  const [showAllQuestions, setShowAllQuestions] = useState(false);\n\n  // Load exam questions\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await api.getExamQuestions(exam._id); // Ensure this API exists\n        setQuestions(response.data || []);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error loading questions:', error);\n        alert('Failed to load exam questions.');\n      }\n    };\n    fetchQuestions();\n  }, [exam._id]);\n\n  // Timer countdown\n  useEffect(() => {\n    if (timeLeft > 0 && !submitting) {\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n      return () => clearTimeout(timer);\n    } else if (timeLeft <= 0 && !submitting) {\n      handleSubmit();\n    }\n  }, [timeLeft, submitting]);\n  const handleAnswerSelect = (questionId, selectedOption) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questionId]: selectedOption\n    }));\n  };\n  const handleSubmit = async () => {\n    if (submitting) return;\n    setSubmitting(true);\n    try {\n      const formattedAnswers = Object.entries(answers).map(([questionId, selectedOption]) => ({\n        questionId,\n        selectedOption\n      }));\n      console.log('Submitting answers:', {\n        userId: user.id,\n        examId: exam._id,\n        answers: formattedAnswers\n      });\n      const result = await api.submitExam(user.id, exam._id, formattedAnswers);\n      console.log('Received result:', result);\n      if (result && result.result) {\n        onComplete(result.result);\n      } else {\n        throw new Error('Invalid response format');\n      }\n    } catch (error) {\n      console.error('Error submitting exam:', error);\n      alert('Error submitting exam. Please check the console and try again.');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n  const getAnsweredCount = () => Object.keys(answers).length;\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading exam questions...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 23\n  }, this);\n  const currentQuestion = questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exam-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"exam-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exam-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: exam.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: exam.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exam-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: timeLeft < 300 ? 'timer-warning' : '',\n            children: [\"Time Left: \", formatTime(timeLeft)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress\",\n          children: [getAnsweredCount(), \"/\", questions.length, \" answered\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onBack,\n          className: \"btn-secondary\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exam-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-toggle\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: !showAllQuestions ? 'active' : '',\n          onClick: () => setShowAllQuestions(false),\n          children: \"One by One\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: showAllQuestions ? 'active' : '',\n          onClick: () => setShowAllQuestions(true),\n          children: \"All Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), !showAllQuestions ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"single-question-view\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-navigation\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Question \", currentQuestionIndex + 1, \" of \", questions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nav-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setCurrentQuestionIndex(Math.max(0, currentQuestionIndex - 1)),\n              disabled: currentQuestionIndex === 0,\n              className: \"btn-secondary\",\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setCurrentQuestionIndex(Math.min(questions.length - 1, currentQuestionIndex + 1)),\n              disabled: currentQuestionIndex === questions.length - 1,\n              className: \"btn-secondary\",\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: currentQuestion.questionText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"options\",\n            children: currentQuestion.options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"option-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: `question-${currentQuestion._id}`,\n                value: option.optionKey,\n                checked: answers[currentQuestion._id] === option.optionKey,\n                onChange: () => handleAnswerSelect(currentQuestion._id, option.optionKey)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"option-text\",\n                children: [option.optionKey, \". \", option.optionText]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 21\n              }, this)]\n            }, option.optionKey, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-grid\",\n          children: questions.map((_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `question-number ${index === currentQuestionIndex ? 'current' : ''} ${answers[questions[index]._id] ? 'answered' : ''}`,\n            onClick: () => setCurrentQuestionIndex(index),\n            children: index + 1\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"all-questions-view\",\n        children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Question \", index + 1, \": \", question.questionText]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"options\",\n            children: question.options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"option-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: `question-${question._id}`,\n                value: option.optionKey,\n                checked: answers[question._id] === option.optionKey,\n                onChange: () => handleAnswerSelect(question._id, option.optionKey)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"option-text\",\n                children: [option.optionKey, \". \", option.optionText]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 23\n              }, this)]\n            }, option.optionKey, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this)]\n        }, question._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submit-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Make sure you have answered all questions before submitting.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Answered: \", getAnsweredCount(), \" out of \", questions.length, \" questions\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          disabled: submitting || getAnsweredCount() === 0,\n          className: \"btn-primary submit-btn\",\n          children: submitting ? 'Submitting...' : 'Submit Exam'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(ExamInterface, \"TzlXkHNkDL1JPNLGAn0pheQ50zE=\");\n_c = ExamInterface;\nexport default ExamInterface;\nvar _c;\n$RefreshReg$(_c, \"ExamInterface\");","map":{"version":3,"names":["React","useEffect","useState","api","jsxDEV","_jsxDEV","ExamInterface","exam","user","onComplete","onBack","_s","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","loading","setLoading","submitting","setSubmitting","timeLeft","setTimeLeft","duration","showAllQuestions","setShowAllQuestions","fetchQuestions","response","getExamQuestions","_id","data","error","console","alert","timer","setTimeout","clearTimeout","handleSubmit","handleAnswerSelect","questionId","selectedOption","prev","formattedAnswers","Object","entries","map","log","userId","id","examId","result","submitExam","Error","formatTime","seconds","minutes","Math","floor","remainingSeconds","toString","padStart","getAnsweredCount","keys","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","currentQuestion","title","description","onClick","max","disabled","min","questionText","options","option","type","name","value","optionKey","checked","onChange","optionText","_","index","question","_c","$RefreshReg$"],"sources":["C:/Users/softlogic/OneDrive/Desktop/online-mcq-system/frontend/src/components/Exam/ExamInterface.js"],"sourcesContent":["// File: src/components/Exam/ExamInterface.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport api from '../../api/apiService';\r\nimport '../../App.css';\r\n\r\nconst ExamInterface = ({ exam, user, onComplete, onBack }) => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [answers, setAnswers] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [timeLeft, setTimeLeft] = useState(exam.duration * 60);\r\n  const [showAllQuestions, setShowAllQuestions] = useState(false);\r\n\r\n  // Load exam questions\r\n  useEffect(() => {\r\n    const fetchQuestions = async () => {\r\n      try {\r\n        const response = await api.getExamQuestions(exam._id); // Ensure this API exists\r\n        setQuestions(response.data || []);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error loading questions:', error);\r\n        alert('Failed to load exam questions.');\r\n      }\r\n    };\r\n\r\n    fetchQuestions();\r\n  }, [exam._id]);\r\n\r\n  // Timer countdown\r\n  useEffect(() => {\r\n    if (timeLeft > 0 && !submitting) {\r\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\r\n      return () => clearTimeout(timer);\r\n    } else if (timeLeft <= 0 && !submitting) {\r\n      handleSubmit();\r\n    }\r\n  }, [timeLeft, submitting]);\r\n\r\n  const handleAnswerSelect = (questionId, selectedOption) => {\r\n    setAnswers(prev => ({\r\n      ...prev,\r\n      [questionId]: selectedOption,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (submitting) return;\r\n\r\n    setSubmitting(true);\r\n\r\n    try {\r\n      const formattedAnswers = Object.entries(answers).map(([questionId, selectedOption]) => ({\r\n        questionId,\r\n        selectedOption,\r\n      }));\r\n\r\n      console.log('Submitting answers:', { userId: user.id, examId: exam._id, answers: formattedAnswers });\r\n\r\n      const result = await api.submitExam(user.id, exam._id, formattedAnswers);\r\n\r\n      console.log('Received result:', result);\r\n\r\n      if (result && result.result) {\r\n        onComplete(result.result);\r\n      } else {\r\n        throw new Error('Invalid response format');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error submitting exam:', error);\r\n      alert('Error submitting exam. Please check the console and try again.');\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = seconds % 60;\r\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const getAnsweredCount = () => Object.keys(answers).length;\r\n\r\n  if (loading) return <div className=\"loading\">Loading exam questions...</div>;\r\n\r\n  const currentQuestion = questions[currentQuestionIndex];\r\n\r\n  return (\r\n    <div className=\"exam-interface\">\r\n      <header className=\"exam-header\">\r\n        <div className=\"exam-info\">\r\n          <h2>{exam.title}</h2>\r\n          <p>{exam.description}</p>\r\n        </div>\r\n        <div className=\"exam-controls\">\r\n          <div className=\"timer\">\r\n            <span className={timeLeft < 300 ? 'timer-warning' : ''}>Time Left: {formatTime(timeLeft)}</span>\r\n          </div>\r\n          <div className=\"progress\">{getAnsweredCount()}/{questions.length} answered</div>\r\n          <button onClick={onBack} className=\"btn-secondary\">Back</button>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"exam-content\">\r\n        <div className=\"view-toggle\">\r\n          <button className={!showAllQuestions ? 'active' : ''} onClick={() => setShowAllQuestions(false)}>One by One</button>\r\n          <button className={showAllQuestions ? 'active' : ''} onClick={() => setShowAllQuestions(true)}>All Questions</button>\r\n        </div>\r\n\r\n        {!showAllQuestions ? (\r\n          <div className=\"single-question-view\">\r\n            <div className=\"question-navigation\">\r\n              <span>Question {currentQuestionIndex + 1} of {questions.length}</span>\r\n              <div className=\"nav-buttons\">\r\n                <button\r\n                  onClick={() => setCurrentQuestionIndex(Math.max(0, currentQuestionIndex - 1))}\r\n                  disabled={currentQuestionIndex === 0}\r\n                  className=\"btn-secondary\"\r\n                >\r\n                  Previous\r\n                </button>\r\n                <button\r\n                  onClick={() => setCurrentQuestionIndex(Math.min(questions.length - 1, currentQuestionIndex + 1))}\r\n                  disabled={currentQuestionIndex === questions.length - 1}\r\n                  className=\"btn-secondary\"\r\n                >\r\n                  Next\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"question-card\">\r\n              <h3>{currentQuestion.questionText}</h3>\r\n              <div className=\"options\">\r\n                {currentQuestion.options.map(option => (\r\n                  <label key={option.optionKey} className=\"option-label\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name={`question-${currentQuestion._id}`}\r\n                      value={option.optionKey}\r\n                      checked={answers[currentQuestion._id] === option.optionKey}\r\n                      onChange={() => handleAnswerSelect(currentQuestion._id, option.optionKey)}\r\n                    />\r\n                    <span className=\"option-text\">{option.optionKey}. {option.optionText}</span>\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"question-grid\">\r\n              {questions.map((_, index) => (\r\n                <button\r\n                  key={index}\r\n                  className={`question-number ${index === currentQuestionIndex ? 'current' : ''} ${answers[questions[index]._id] ? 'answered' : ''}`}\r\n                  onClick={() => setCurrentQuestionIndex(index)}\r\n                >\r\n                  {index + 1}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"all-questions-view\">\r\n            {questions.map((question, index) => (\r\n              <div key={question._id} className=\"question-card\">\r\n                <h3>Question {index + 1}: {question.questionText}</h3>\r\n                <div className=\"options\">\r\n                  {question.options.map(option => (\r\n                    <label key={option.optionKey} className=\"option-label\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        name={`question-${question._id}`}\r\n                        value={option.optionKey}\r\n                        checked={answers[question._id] === option.optionKey}\r\n                        onChange={() => handleAnswerSelect(question._id, option.optionKey)}\r\n                      />\r\n                      <span className=\"option-text\">{option.optionKey}. {option.optionText}</span>\r\n                    </label>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"submit-section\">\r\n          <div className=\"submit-info\">\r\n            <p>Make sure you have answered all questions before submitting.</p>\r\n            <p>Answered: {getAnsweredCount()} out of {questions.length} questions</p>\r\n          </div>\r\n          <button\r\n            onClick={handleSubmit}\r\n            disabled={submitting || getAnsweredCount() === 0}\r\n            className=\"btn-primary submit-btn\"\r\n          >\r\n            {submitting ? 'Submitting...' : 'Submit Exam'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExamInterface;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}