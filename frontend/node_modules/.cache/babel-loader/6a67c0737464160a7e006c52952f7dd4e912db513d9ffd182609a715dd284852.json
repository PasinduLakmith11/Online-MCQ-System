{"ast":null,"code":"const API_BASE_URL = 'http://localhost:5000/api';\nconst api = {\n  login: async (email, password) => {\n    const response = await fetch(`${API_BASE_URL}/auth/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    return response.json();\n  },\n  register: async (name, email, password) => {\n    const response = await fetch(`${API_BASE_URL}/auth/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password\n      })\n    });\n    return response.json();\n  },\n  getExams: async () => {\n    const response = await fetch(`${API_BASE_URL}/exams`);\n    return response.json();\n  },\n  getExamById: async id => {\n    const response = await fetch(`${API_BASE_URL}/exams/${id}`);\n    return response.json();\n  },\n  getQuestions: async examId => {\n    const response = await fetch(`${API_BASE_URL}/questions/${examId}`);\n    return response.json();\n  },\n  submitExam: async (userId, examId, answers) => {\n    const response = await fetch(`${API_BASE_URL}/results/submit`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userId,\n        examId,\n        answers\n      })\n    });\n    return response.json();\n  },\n  getUserResults: async userId => {\n    const response = await fetch(`${API_BASE_URL}/results/user/${userId}`);\n    return response.json();\n  },\n  getResultDetails: async resultId => {\n    const response = await fetch(`${API_BASE_URL}/results/${resultId}/details`);\n    return response.json();\n  }\n};\nexport default api;","map":{"version":3,"names":["API_BASE_URL","api","login","email","password","response","fetch","method","headers","body","JSON","stringify","json","register","name","getExams","getExamById","id","getQuestions","examId","submitExam","userId","answers","getUserResults","getResultDetails","resultId"],"sources":["C:/Users/softlogic/OneDrive/Desktop/online-mcq-system/frontend/src/api/apiService.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:5000/api';\r\n\r\nconst api = {\r\n  login: async (email, password) => {\r\n    const response = await fetch(`${API_BASE_URL}/auth/login`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ email, password })\r\n    });\r\n    return response.json();\r\n  },\r\n\r\n  register: async (name, email, password) => {\r\n    const response = await fetch(`${API_BASE_URL}/auth/register`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ name, email, password })\r\n    });\r\n    return response.json();\r\n  },\r\n\r\n  getExams: async () => {\r\n    const response = await fetch(`${API_BASE_URL}/exams`);\r\n    return response.json();\r\n  },\r\n\r\n  getExamById: async (id) => {\r\n    const response = await fetch(`${API_BASE_URL}/exams/${id}`);\r\n    return response.json();\r\n  },\r\n\r\n  getQuestions: async (examId) => {\r\n  const response = await fetch(`${API_BASE_URL}/questions/${examId}`);\r\n  return response.json();\r\n},\r\n\r\n\r\n  submitExam: async (userId, examId, answers) => {\r\n    const response = await fetch(`${API_BASE_URL}/results/submit`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ userId, examId, answers })\r\n    });\r\n    return response.json();\r\n  },\r\n\r\n  getUserResults: async (userId) => {\r\n    const response = await fetch(`${API_BASE_URL}/results/user/${userId}`);\r\n    return response.json();\r\n  },\r\n\r\n  getResultDetails: async (resultId) => {\r\n    const response = await fetch(`${API_BASE_URL}/results/${resultId}/details`);\r\n    return response.json();\r\n  }\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,2BAA2B;AAEhD,MAAMC,GAAG,GAAG;EACVC,KAAK,EAAE,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,YAAY,aAAa,EAAE;MACzDO,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,KAAK;QAAEC;MAAS,CAAC;IAC1C,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACO,IAAI,CAAC,CAAC;EACxB,CAAC;EAEDC,QAAQ,EAAE,MAAAA,CAAOC,IAAI,EAAEX,KAAK,EAAEC,QAAQ,KAAK;IACzC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,YAAY,gBAAgB,EAAE;MAC5DO,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEG,IAAI;QAAEX,KAAK;QAAEC;MAAS,CAAC;IAChD,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACO,IAAI,CAAC,CAAC;EACxB,CAAC;EAEDG,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,YAAY,QAAQ,CAAC;IACrD,OAAOK,QAAQ,CAACO,IAAI,CAAC,CAAC;EACxB,CAAC;EAEDI,WAAW,EAAE,MAAOC,EAAE,IAAK;IACzB,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,YAAY,UAAUiB,EAAE,EAAE,CAAC;IAC3D,OAAOZ,QAAQ,CAACO,IAAI,CAAC,CAAC;EACxB,CAAC;EAEDM,YAAY,EAAE,MAAOC,MAAM,IAAK;IAChC,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,YAAY,cAAcmB,MAAM,EAAE,CAAC;IACnE,OAAOd,QAAQ,CAACO,IAAI,CAAC,CAAC;EACxB,CAAC;EAGCQ,UAAU,EAAE,MAAAA,CAAOC,MAAM,EAAEF,MAAM,EAAEG,OAAO,KAAK;IAC7C,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,YAAY,iBAAiB,EAAE;MAC7DO,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEU,MAAM;QAAEF,MAAM;QAAEG;MAAQ,CAAC;IAClD,CAAC,CAAC;IACF,OAAOjB,QAAQ,CAACO,IAAI,CAAC,CAAC;EACxB,CAAC;EAEDW,cAAc,EAAE,MAAOF,MAAM,IAAK;IAChC,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,YAAY,iBAAiBqB,MAAM,EAAE,CAAC;IACtE,OAAOhB,QAAQ,CAACO,IAAI,CAAC,CAAC;EACxB,CAAC;EAEDY,gBAAgB,EAAE,MAAOC,QAAQ,IAAK;IACpC,MAAMpB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,YAAY,YAAYyB,QAAQ,UAAU,CAAC;IAC3E,OAAOpB,QAAQ,CAACO,IAAI,CAAC,CAAC;EACxB;AACF,CAAC;AAED,eAAeX,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}